/*
 * REST API - DISNEY (CHALLENGE ALKEMY)
 * API para explorar el mundo de Disney, la cual permitirá conocer y modificar los personajes que lo componen y entender en qué películas estos participaron.
 *
 * The version of the OpenAPI document: v1.0.0
 * Contact: j.escurra.1999@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Movie;
import org.openapitools.client.model.MovieITF;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PelculasApi
 */
@Ignore
public class PelculasApiTest {

    private final PelculasApi api = new PelculasApi();

    
    /**
     * Elimina un personaje por el identificador
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteByIdUsingDELETE1Test() throws ApiException {
        Long id = null;
        api.deleteByIdUsingDELETE1(id);

        // TODO: test validations
    }
    
    /**
     * Busca una película según su identificador
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findByIdUsingGET1Test() throws ApiException {
        Long id = null;
        Movie response = api.findByIdUsingGET1(id);

        // TODO: test validations
    }
    
    /**
     * Buscar películas por coincidencias con el nombre (%_%)
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findByNameUsingGET1Test() throws ApiException {
        String name = null;
        List<MovieITF> response = api.findByNameUsingGET1(name);

        // TODO: test validations
    }
    
    /**
     * Guarda un película
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void saveUsingPOST1Test() throws ApiException {
        Movie movie = null;
        Movie response = api.saveUsingPOST1(movie);

        // TODO: test validations
    }
    
    /**
     * Guarda un película
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void saveUsingPUT1Test() throws ApiException {
        Movie movie = null;
        Movie response = api.saveUsingPUT1(movie);

        // TODO: test validations
    }
    
}
